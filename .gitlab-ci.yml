stages:
  - build
  - push
  - deploy
  - destroy

variables:
  PROJECT_NAME: labo-website-2021

build:
  stage: build
  image: registry.caffeina.co/open-source/docker-gitlab-ci:up-to-date-compose
  variables:
    COMPOSE_DOCKER_CLI_BUILD: "0"
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    # Env
    - printenv $(echo "n3_env") > ./.env
    - docker-compose -f ./docker/build.yml build --pull
  only:
    - develop

push:
  stage: push
  image: registry.caffeina.co/open-source/docker-gitlab-ci:up-to-date-compose
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - docker-compose -f ./docker/build.yml push
  only:
    - develop

deploy-n3:
  stage: deploy
  image: registry.caffeina.co/open-source/docker-gitlab-ci:up-to-date-compose
  variables:
    DOCKER_TLS_VERIFY: "1"
    DOCKER_HOST: ${N3_DOCKER_HOST}
    DOCKER_CERT_PATH: ${N3_DOCKER_CERT_PATH}
    VIRTUAL_HOST: "${CI_COMMIT_REF_NAME}.${CI_PROJECT_NAME}.${N3_DOCKER_MACHINE_NAME}"
    COMPOSE_PROJECT_NAME: ${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}
    DC_FILE: "docker-compose.yml"
  script:
    # Env
    - printenv $(echo "n3_env") > ./.env
    # Certs
    - mkdir -p ${DOCKER_CERT_PATH}
    - echo "${N3_DOCKER_MACHINE_CA}" > ${DOCKER_CERT_PATH}/ca.pem
    - echo "${N3_DOCKER_CLIENT_CERT}" > ${DOCKER_CERT_PATH}/cert.pem
    - echo "${N3_DOCKER_CLIENT_KEY}" > ${DOCKER_CERT_PATH}/key.pem
    # Deploy
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker-compose -f ${DC_FILE} pull
    - docker-compose -f ${DC_FILE} up -d --remove-orphans
    # Cleanup
    - rm -rf ${DOCKER_CERT_PATH}
  environment:
    name: ${CI_COMMIT_REF_NAME}
    url: "http://${CI_COMMIT_REF_NAME}.${CI_PROJECT_NAME}.${N3_DOCKER_MACHINE_NAME}/"
  #when: manual
  only:
    - develop

n3-wipe-data-and-stop:
  stage: destroy
  image: registry.caffeina.co/open-source/docker-gitlab-ci:up-to-date-compose
  variables:
    DOCKER_TLS_VERIFY: "1"
    DOCKER_HOST: ${N3_DOCKER_HOST}
    DOCKER_CERT_PATH: ${N3_DOCKER_CERT_PATH}
    VIRTUAL_HOST: "${CI_COMMIT_REF_NAME}.${CI_PROJECT_NAME}.${DOCKER_MACHINE_NAME}"
    COMPOSE_PROJECT_NAME: ${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}
    DC_FILE: "docker-compose.yml"
  script:
    # Certs
    - mkdir -p ${DOCKER_CERT_PATH}
    - echo "${N3_DOCKER_MACHINE_CA}" > ${DOCKER_CERT_PATH}/ca.pem
    - echo "${N3_DOCKER_CLIENT_CERT}" > ${DOCKER_CERT_PATH}/cert.pem
    - echo "${N3_DOCKER_CLIENT_KEY}" > ${DOCKER_CERT_PATH}/key.pem
    # STOP
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker-compose -f ${DC_FILE} down -v
    # Cleanup
    - rm -rf ${DOCKER_CERT_PATH}
  when: manual
  environment:
    name: ${CI_COMMIT_REF_NAME}
    action: stop
  only:
    - develop

deploy-preprod:
  stage: push
  image: registry.caffeina.co/devops/convox-gitlab-ci:latest
  variables:
    CONVOX_APP_NAME: ${PROJECT_NAME}
    CONVOX_RACK: ${PREPROD_CONVOX_RACK}
  script:
    - convox deploy -a $CONVOX_APP_NAME
  only:
    - preprod

deploy-prod:
  stage: push
  image: registry.caffeina.co/devops/convox-gitlab-ci:latest
  variables:
    CONVOX_APP_NAME: ${PROJECT_NAME}
    CONVOX_RACK: ${PROD_CONVOX_RACK}
  script:
    - convox deploy -a $CONVOX_APP_NAME
  only:
    - master
